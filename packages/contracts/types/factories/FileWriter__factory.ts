/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { FileWriter, FileWriterInterface } from "../FileWriter";

const _abi = [
  {
    inputs: [],
    name: "EmptyFile",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "checksum",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "metadata",
        type: "bytes",
      },
    ],
    name: "NewFile",
    type: "event",
  },
];

const _bytecode =
  "0x61063461003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063e4a6591f1461003a575b600080fd5b81801561004657600080fd5b5061005a61005536600461037b565b610071565b604051610068929190610443565b60405180910390f35b6000610090604051806040016040528060008152602001606081525090565b600073__$79896583f45f015cbf360bbefcc2e48d69$__63c2722ecc6040518163ffffffff1660e01b8152600401602060405180830381865af41580156100db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ff91906104a8565b90506000805b86518110156101b457826001600160a01b03166331654b0988838151811061012f5761012f6104d8565b60200260200101516040518263ffffffff1660e01b815260040161015591815260200190565b602060405180830381865afa158015610172573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019691906104ee565b6101a0908361051d565b9150806101ac81610535565b915050610105565b50806000036101d65760405163067b6a0f60e01b815260040160405180910390fd5b6040518060400160405280828152602001878152509250816001600160a01b031663093e98398460405160200161020d919061054e565b6040516020818303038152906040526040518263ffffffff1660e01b815260040161023891906105f3565b6020604051808303816000875af1158015610257573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027b91906104ee565b9350837fd62b72e369ab2916ce62cfece3cc308c452b69db52f1eeaf6fc1c1f4d87775d68460000151876040516102b3929190610606565b60405180910390a250509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610303576103036102c4565b604052919050565b600082601f83011261031c57600080fd5b813567ffffffffffffffff811115610336576103366102c4565b610349601f8201601f19166020016102da565b81815284602083860101111561035e57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561038e57600080fd5b823567ffffffffffffffff808211156103a657600080fd5b818501915085601f8301126103ba57600080fd5b81356020828211156103ce576103ce6102c4565b8160051b6103dd8282016102da565b928352848101820192828101908a8511156103f757600080fd5b958301955b84871015610415578635825295830195908301906103fc565b975050508601359250508082111561042c57600080fd5b506104398582860161030b565b9150509250929050565b828152600060206040818401526080830184516040850152818501516040606086015281815180845260a0870191508483019350600092505b8083101561049c578351825292840192600192909201919084019061047c565b50979650505050505050565b6000602082840312156104ba57600080fd5b81516001600160a01b03811681146104d157600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561050057600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561053057610530610507565b500190565b60006001820161054757610547610507565b5060010190565b60208082528251828201528281015160408084015280516060840181905260009291820190839060808601905b8083101561059b578351825292840192600192909201919084019061057b565b509695505050505050565b6000815180845260005b818110156105cc576020818501810151868301820152016105b0565b818111156105de576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006104d160208301846105a6565b82815260406020820152600061061f60408301846105a6565b94935050505056fea164736f6c634300080d000a";

type FileWriterConstructorParams =
  | [linkLibraryAddresses: FileWriterLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FileWriterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class FileWriter__factory extends ContractFactory {
  constructor(...args: FileWriterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        FileWriter__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: FileWriterLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$79896583f45f015cbf360bbefcc2e48d69\\$__", "g"),
      linkLibraryAddresses[
        "packages/contracts/src/approach2/ContentStoreRegistry.sol:ContentStoreRegistry"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FileWriter> {
    return super.deploy(overrides || {}) as Promise<FileWriter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FileWriter {
    return super.attach(address) as FileWriter;
  }
  override connect(signer: Signer): FileWriter__factory {
    return super.connect(signer) as FileWriter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FileWriterInterface {
    return new utils.Interface(_abi) as FileWriterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FileWriter {
    return new Contract(address, _abi, signerOrProvider) as FileWriter;
  }
}

export interface FileWriterLibraryAddresses {
  ["packages/contracts/src/approach2/ContentStoreRegistry.sol:ContentStoreRegistry"]: string;
}
