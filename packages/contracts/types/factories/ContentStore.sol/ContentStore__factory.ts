/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ContentStore,
  ContentStoreInterface,
} from "../../ContentStore.sol/ContentStore";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "checksum",
        type: "bytes32",
      },
    ],
    name: "ChecksumExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "checksum",
        type: "bytes32",
      },
    ],
    name: "ChecksumNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "ContentTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_size",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_end",
        type: "uint256",
      },
    ],
    name: "InvalidCodeAtRange",
    type: "error",
  },
  {
    inputs: [],
    name: "WriteError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "checksum",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "contentSize",
        type: "uint256",
      },
    ],
    name: "NewChecksum",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_checksums",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "_pointers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "content",
        type: "bytes",
      },
    ],
    name: "addContent",
    outputs: [
      {
        internalType: "bytes32",
        name: "checksum",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pointer",
        type: "address",
      },
    ],
    name: "addPointer",
    outputs: [
      {
        internalType: "bytes32",
        name: "checksum",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "checksum",
        type: "bytes32",
      },
    ],
    name: "checksumExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "checksum",
        type: "bytes32",
      },
    ],
    name: "contentLength",
    outputs: [
      {
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "checksum",
        type: "bytes32",
      },
    ],
    name: "getPointer",
    outputs: [
      {
        internalType: "address",
        name: "pointer",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610739806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80633a77c6c91161005b5780633a77c6c9146100fc5780634641dce61461010f578063a1eb26f314610122578063f97406f71461013557600080fd5b806308fd83ae14610082578063093e9839146100c857806331654b09146100e9575b600080fd5b6100ab61009036600461056c565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100db6100d636600461059b565b610170565b6040519081526020016100bf565b6100db6100f736600461056c565b610267565b6100db61010a36600461064c565b6102cf565b6100ab61011d36600461056c565b6103a0565b6100db61013036600461056c565b6103f4565b61016061014336600461056c565b6000908152602081905260409020546001600160a01b0316151590565b60405190151581526020016100bf565b6000615fff8251111561019657604051635ee68a6560e01b815260040160405180910390fd5b5080516020808301919091206000818152918290526040909120546001600160a01b0316156101c457919050565b6101cd82610415565b60008281526020818152604080832080546001600160a01b0319166001600160a01b03959095169490941790935560018054808201825592527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69091018390558351915191825282917fa1011c3aaafa54b70d8ca12f3b9257ca9a4fe1f6a02196819ea1dcaee1932ca091015b60405180910390a2919050565b6000818152602081905260408120546001600160a01b03166102a4576040516303001a1960e41b8152600481018390526024015b60405180910390fd5b6000828152602081905260409020546102c9906001906001600160a01b03163b610675565b92915050565b60006102da8261047a565b80516020918201206000818152918290526040909120549091506001600160a01b03161561030757919050565b600081815260208190526040812080546001600160a01b0319166001600160a01b038516179055600180548082018255918190527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf690910182905581907fa1011c3aaafa54b70d8ca12f3b9257ca9a4fe1f6a02196819ea1dcaee1932ca090843b6103929190610675565b60405190815260200161025a565b6000818152602081905260408120546001600160a01b03166103d8576040516303001a1960e41b81526004810183905260240161029b565b506000908152602081905260409020546001600160a01b031690565b6001818154811061040457600080fd5b600091825260209091200154905081565b6000806104408360405160200161042c91906106d5565b60405160208183030381529060405261048a565b90508051602082016000f091506001600160a01b0382166104745760405163046a55db60e11b815260040160405180910390fd5b50919050565b60606102c98260016000196104b6565b60608151826040516020016104a09291906106e8565b6040516020818303038152906040529050919050565b6060833b60008190036104d9575050604080516020810190915260008152610565565b808411156104f7575050604080516020810190915260008152610565565b838310156105295760405163162544fd60e11b815260048101829052602481018590526044810184905260640161029b565b838303848203600082821061053e5782610540565b815b60408051603f8301601f19168101909152818152955090508087602087018a3c505050505b9392505050565b60006020828403121561057e57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156105ad57600080fd5b813567ffffffffffffffff808211156105c557600080fd5b818401915084601f8301126105d957600080fd5b8135818111156105eb576105eb610585565b604051601f8201601f19908116603f0116810190838211818310171561061357610613610585565b8160405282815287602084870101111561062c57600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561065e57600080fd5b81356001600160a01b038116811461056557600080fd5b60008282101561069557634e487b7160e01b600052601160045260246000fd5b500390565b6000815160005b818110156106bb57602081850181015186830152016106a1565b818111156106ca576000828601525b509290920192915050565b600081526000610565600183018461069a565b606360f81b815260e083901b6001600160e01b03191660018201526880600e6000396000f360b81b60058201526000610724600e83018461069a565b94935050505056fea164736f6c634300080d000a";

type ContentStoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContentStoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContentStore__factory extends ContractFactory {
  constructor(...args: ContentStoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContentStore> {
    return super.deploy(overrides || {}) as Promise<ContentStore>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ContentStore {
    return super.attach(address) as ContentStore;
  }
  override connect(signer: Signer): ContentStore__factory {
    return super.connect(signer) as ContentStore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContentStoreInterface {
    return new utils.Interface(_abi) as ContentStoreInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContentStore {
    return new Contract(address, _abi, signerOrProvider) as ContentStore;
  }
}
