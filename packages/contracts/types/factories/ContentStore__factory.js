"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContentStore__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "checksum",
                type: "bytes32",
            },
        ],
        name: "ChecksumExists",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "checksum",
                type: "bytes32",
            },
        ],
        name: "ChecksumNotFound",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "checksum",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "contentSize",
                type: "uint256",
            },
        ],
        name: "NewChecksum",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "content",
                type: "bytes",
            },
        ],
        name: "addContent",
        outputs: [
            {
                internalType: "bytes32",
                name: "checksum",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "pointer",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "pointer",
                type: "address",
            },
        ],
        name: "addPointer",
        outputs: [
            {
                internalType: "bytes32",
                name: "checksum",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "checksum",
                type: "bytes32",
            },
        ],
        name: "checksumExists",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "checksums",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "checksum",
                type: "bytes32",
            },
        ],
        name: "contentLength",
        outputs: [
            {
                internalType: "uint256",
                name: "size",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "checksum",
                type: "bytes32",
            },
        ],
        name: "getPointer",
        outputs: [
            {
                internalType: "address",
                name: "pointer",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        name: "pointers",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b506105c5806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80633a77c6c91161005b5780633a77c6c9146101195780634641dce61461012c578063e8eae3cf1461013f578063f97406f71461015257600080fd5b8063093e9839146100825780631bf226ac146100b757806331654b09146100f8575b600080fd5b6100956100903660046104be565b61018d565b604080519283526001600160a01b039091166020830152015b60405180910390f35b6100e06100c536600461056f565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100ae565b61010b61010636600461056f565b610277565b6040519081526020016100ae565b61010b610127366004610588565b6102dc565b6100e061013a36600461056f565b6103b0565b61010b61014d36600461056f565b610404565b61017d61016036600461056f565b6000908152602081905260409020546001600160a01b0316151590565b60405190151581526020016100ae565b805160208083019190912060008181529182905260408220549091906001600160a01b0316156101d8575060008181526020819052604090205490926001600160a01b039091169150565b6101e183610425565b60008381526020818152604080832080546001600160a01b0319166001600160a01b03861617905560018054808201825593527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69092018590558551915191825291925083917fa1011c3aaafa54b70d8ca12f3b9257ca9a4fe1f6a02196819ea1dcaee1932ca0910160405180910390a2915091565b6000818152602081905260408120546001600160a01b03166102b4576040516303001a1960e41b8152600481018390526024015b60405180910390fd5b6000828152602081905260409020546102d5906001600160a01b0316610467565b5192915050565b6000806102e883610467565b80516020808301919091206000818152918290526040909120549093509091506001600160a01b03161561031c5750919050565b60008281526020818152604080832080546001600160a01b0319166001600160a01b03881617905560018054808201825593527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69092018490558251915191825283917fa1011c3aaafa54b70d8ca12f3b9257ca9a4fe1f6a02196819ea1dcaee1932ca0910160405180910390a250919050565b6000818152602081905260408120546001600160a01b03166103e8576040516303001a1960e41b8152600481018390526024016102ab565b506000908152602081905260409020546001600160a01b031690565b6001818154811061041457600080fd5b600091825260209091200154905081565b60008151600181018060401b6a61000080600a3d393df300178452600a8101601585016000f0925050816104615763301164256000526004601cfd5b90915290565b6060813b8061047e576311052bb46000526004601cfd5b600181039050604051915061ffe0603f820116820160405280825280600160208401853c50919050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156104d057600080fd5b813567ffffffffffffffff808211156104e857600080fd5b818401915084601f8301126104fc57600080fd5b81358181111561050e5761050e6104a8565b604051601f8201601f19908116603f01168101908382118183101715610536576105366104a8565b8160405282815287602084870101111561054f57600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561058157600080fd5b5035919050565b60006020828403121561059a57600080fd5b81356001600160a01b03811681146105b157600080fd5b939250505056fea164736f6c634300080d000a";
const isSuperArgs = (xs) => xs.length > 1;
class ContentStore__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.ContentStore__factory = ContentStore__factory;
ContentStore__factory.bytecode = _bytecode;
ContentStore__factory.abi = _abi;
