"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileStoreRegistry__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "ChainNotSupported",
        type: "error",
    },
    {
        inputs: [],
        name: "getStore",
        outputs: [
            {
                internalType: "contract FileStore",
                name: "",
                type: "FileStore",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60a1610039600b82828239805160001a60731461002c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063c2722ecc146038575b600080fd5b603e605a565b6040516001600160a01b03909116815260200160405180910390f35b6000466001819003606d57600091505090565b507fa76502998eff87fba27b2646ba22d1c2b2208f239b074dd0a9a7df688501c84791905056fea164736f6c634300080d000a";
const isSuperArgs = (xs) => xs.length > 1;
class FileStoreRegistry__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.FileStoreRegistry__factory = FileStoreRegistry__factory;
FileStoreRegistry__factory.bytecode = _bytecode;
FileStoreRegistry__factory.abi = _abi;
