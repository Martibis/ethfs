/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IFileDirectory,
  IFileDirectoryInterface,
} from "../../FileDirectory.sol/IFileDirectory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "filename",
        type: "string",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "checksum",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "contentType",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "contentEncoding",
        type: "string",
      },
    ],
    name: "FileCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "filename",
        type: "string",
      },
    ],
    name: "FileDeleted",
    type: "event",
  },
];

export class IFileDirectory__factory {
  static readonly abi = _abi;
  static createInterface(): IFileDirectoryInterface {
    return new utils.Interface(_abi) as IFileDirectoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IFileDirectory {
    return new Contract(address, _abi, signerOrProvider) as IFileDirectory;
  }
}
