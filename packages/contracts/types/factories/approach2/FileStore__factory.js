"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileStore__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "FileNotFound",
        type: "error",
    },
    {
        inputs: [],
        name: "FilenameExists",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "string",
                name: "filename",
                type: "string",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "checksum",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "size",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "metadata",
                type: "bytes",
            },
        ],
        name: "FileCreated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "string",
                name: "filename",
                type: "string",
            },
        ],
        name: "FileDeleted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferStarted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        inputs: [],
        name: "acceptOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "filename",
                type: "string",
            },
            {
                internalType: "bytes32[]",
                name: "checksums",
                type: "bytes32[]",
            },
            {
                internalType: "bytes",
                name: "metadata",
                type: "bytes",
            },
        ],
        name: "createFile",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "filename",
                type: "string",
            },
        ],
        name: "deleteFile",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "filename",
                type: "string",
            },
        ],
        name: "fileExists",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "filenames",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        name: "files",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "filename",
                type: "string",
            },
        ],
        name: "getChecksum",
        outputs: [
            {
                internalType: "bytes32",
                name: "checksum",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "filename",
                type: "string",
            },
        ],
        name: "getFile",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "size",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "bytes32",
                                name: "checksum",
                                type: "bytes32",
                            },
                            {
                                internalType: "address",
                                name: "pointer",
                                type: "address",
                            },
                        ],
                        internalType: "struct Content[]",
                        name: "contents",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct File",
                name: "file",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "pendingOwner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5061001a3361001f565b610096565b600180546001600160a01b031916905561004381610046602090811b6105a317901c565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610db1806100a56000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063a991005411610071578063a99100541461014c578063d0643b111461015f578063e0876aa81461017f578063e30c39781461019f578063e7755761146101b0578063f2fde38b146101db57600080fd5b8063715018a6146100b957806379ba5097146100c35780638da5cb5b146100cb57806397207992146100f55780639bccd6ad14610108578063a52e640e1461012b575b600080fd5b6100c16101ee565b005b6100c1610202565b6000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100c1610103366004610949565b610281565b61011b610116366004610a2a565b6102d2565b60405190151581526020016100ec565b61013e610139366004610a2a565b610300565b6040519081526020016100ec565b6100c161015a366004610a2a565b610347565b61017261016d366004610a67565b6103b0565b6040516100ec9190610adc565b61019261018d366004610a2a565b61045c565b6040516100ec9190610aef565b6001546001600160a01b03166100d8565b61013e6101be366004610a2a565b805160208183018101805160028252928201919093012091525481565b6100c16101e9366004610b71565b610532565b6101f66105f3565b610200600061064d565b565b60015433906001600160a01b031681146102755760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b60648201526084015b60405180910390fd5b61027e8161064d565b50565b6000801b6002846040516102959190610b8e565b908152602001604051809103902054146102c25760405163fc78a34d60e01b815260040160405180910390fd5b6102cd838383610666565b505050565b60008060001b6002836040516102e89190610b8e565b90815260200160405180910390205414159050919050565b60006002826040516103129190610b8e565b9081526040519081900360200190205490508061034257604051633b4835d960e21b815260040160405180910390fd5b919050565b61034f6105f3565b60028160405161035f9190610b8e565b9081526040519081900360200181206000905561037d908290610b8e565b604051908190038120907f584fb2b00bcb43e608b5efabffaa6c6037e3f5fd1a3ec96ea172ada6056d617490600090a250565b600381815481106103c057600080fd5b9060005260206000200160009150905080546103db90610baa565b80601f016020809104026020016040519081016040528092919081815260200182805461040790610baa565b80156104545780601f1061042957610100808354040283529160200191610454565b820191906000526020600020905b81548152906001019060200180831161043757829003601f168201915b505050505081565b60408051808201909152600081526060602082015260006002836040516104839190610b8e565b908152604051908190036020019020549050806104b357604051633b4835d960e21b815260040160405180910390fd5b60405163473aa2a560e01b81526004810182905273__$1461fc95244bd93aa05561b473f57cc149$__9063473aa2a590602401600060405180830381865af4158015610503573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261052b9190810190610cb8565b9392505050565b61053a6105f3565b600180546001600160a01b0383166001600160a01b0319909116811790915561056b6000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146102005760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161026c565b600180546001600160a01b031916905561027e816105a3565b60008073__$753a9f2206a3f3daa0935653cc04bf2189$__63e4a6591f85856040518363ffffffff1660e01b81526004016106a2929190610ced565b600060405180830381865af41580156106bf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106e79190810190610d44565b91509150816002866040516106fc9190610b8e565b9081526040516020918190038201902091909155600380546001810182556000919091528651610753927fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b909201918801906107ac565b5081856040516107639190610b8e565b604051908190038120835190917f1775727f73eb9deb31b3acc059551958c7fc9ddac6f63fec63eb7b198ccf25799161079d918890610d8b565b60405180910390a35050505050565b8280546107b890610baa565b90600052602060002090601f0160209004810192826107da5760008555610820565b82601f106107f357805160ff1916838001178555610820565b82800160010185558215610820579182015b82811115610820578251825591602001919060010190610805565b5061082c929150610830565b5090565b5b8082111561082c5760008155600101610831565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561087e5761087e610845565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156108ad576108ad610845565b604052919050565b600082601f8301126108c657600080fd5b813567ffffffffffffffff8111156108e0576108e0610845565b6108f3601f8201601f1916602001610884565b81815284602083860101111561090857600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff82111561093f5761093f610845565b5060051b60200190565b60008060006060848603121561095e57600080fd5b833567ffffffffffffffff8082111561097657600080fd5b610982878388016108b5565b945060209150818601358181111561099957600080fd5b8601601f810188136109aa57600080fd5b80356109bd6109b882610925565b610884565b81815260059190911b8201840190848101908a8311156109dc57600080fd5b928501925b828410156109fa578335825292850192908501906109e1565b96505050506040860135915080821115610a1357600080fd5b50610a20868287016108b5565b9150509250925092565b600060208284031215610a3c57600080fd5b813567ffffffffffffffff811115610a5357600080fd5b610a5f848285016108b5565b949350505050565b600060208284031215610a7957600080fd5b5035919050565b60005b83811015610a9b578181015183820152602001610a83565b83811115610aaa576000848401525b50505050565b60008151808452610ac8816020860160208601610a80565b601f01601f19169290920160200192915050565b60208152600061052b6020830184610ab0565b602080825282518282015282810151604080840181905281516060850181905260009392830191849160808701905b80841015610b50578451805183528601516001600160a01b031686830152938501936001939093019290820190610b1e565b50979650505050505050565b6001600160a01b038116811461027e57600080fd5b600060208284031215610b8357600080fd5b813561052b81610b5c565b60008251610ba0818460208701610a80565b9190910192915050565b600181811c90821680610bbe57607f821691505b602082108103610bde57634e487b7160e01b600052602260045260246000fd5b50919050565b60006040808385031215610bf757600080fd5b610bff61085b565b91508251825260208084015167ffffffffffffffff811115610c2057600080fd5b8401601f81018613610c3157600080fd5b8051610c3f6109b882610925565b81815260069190911b82018301908381019088831115610c5e57600080fd5b928401925b82841015610ca75785848a031215610c7b5760008081fd5b610c8361085b565b8451815285850151610c9481610b5c565b8187015282529285019290840190610c63565b808588015250505050505092915050565b600060208284031215610cca57600080fd5b815167ffffffffffffffff811115610ce157600080fd5b610a5f84828501610be4565b604080825283519082018190526000906020906060840190828701845b82811015610d2657815184529284019290840190600101610d0a565b50505083810382850152610d3a8186610ab0565b9695505050505050565b60008060408385031215610d5757600080fd5b82519150602083015167ffffffffffffffff811115610d7557600080fd5b610d8185828601610be4565b9150509250929050565b828152604060208201526000610a5f6040830184610ab056fea164736f6c634300080d000a";
const isSuperArgs = (xs) => {
    return (typeof xs[0] === "string" ||
        Array.isArray(xs[0]) ||
        "_isInterface" in xs[0]);
};
class FileStore__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            const [linkLibraryAddresses, signer] = args;
            super(_abi, FileStore__factory.linkBytecode(linkLibraryAddresses), signer);
        }
    }
    static linkBytecode(linkLibraryAddresses) {
        let linkedBytecode = _bytecode;
        linkedBytecode = linkedBytecode.replace(new RegExp("__\\$1461fc95244bd93aa05561b473f57cc149\\$__", "g"), linkLibraryAddresses["packages/contracts/src/approach2/FileReader.sol:FileReader"]
            .replace(/^0x/, "")
            .toLowerCase());
        linkedBytecode = linkedBytecode.replace(new RegExp("__\\$753a9f2206a3f3daa0935653cc04bf2189\\$__", "g"), linkLibraryAddresses["packages/contracts/src/approach2/FileWriter.sol:FileWriter"]
            .replace(/^0x/, "")
            .toLowerCase());
        return linkedBytecode;
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.FileStore__factory = FileStore__factory;
FileStore__factory.bytecode = _bytecode;
FileStore__factory.abi = _abi;
