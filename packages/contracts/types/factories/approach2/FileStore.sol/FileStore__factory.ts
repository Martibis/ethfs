/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  FileStore,
  FileStoreInterface,
} from "../../../approach2/FileStore.sol/FileStore";

const _abi = [
  {
    inputs: [],
    name: "FileNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "FilenameExists",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "filename",
        type: "string",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "checksum",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "metadata",
        type: "bytes",
      },
    ],
    name: "FileCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "filename",
        type: "string",
      },
    ],
    name: "FileDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "filename",
        type: "string",
      },
      {
        internalType: "bytes32[]",
        name: "checksums",
        type: "bytes32[]",
      },
      {
        internalType: "bytes",
        name: "metadata",
        type: "bytes",
      },
    ],
    name: "createFile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "filename",
        type: "string",
      },
    ],
    name: "deleteFile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "filename",
        type: "string",
      },
    ],
    name: "fileExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filenames",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "files",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "filename",
        type: "string",
      },
    ],
    name: "readFile",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "size",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "checksums",
            type: "bytes32[]",
          },
        ],
        internalType: "struct File",
        name: "file",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "filename",
        type: "string",
      },
    ],
    name: "readFileData",
    outputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b610096565b600180546001600160a01b031916905561004381610046602090811b6105ec17901c565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610e5d806100a56000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80639bccd6ad116100715780639bccd6ad1461014c578063a99100541461016f578063d0643b1114610182578063e30c397814610195578063e7755761146101a6578063f2fde38b146101df57600080fd5b806360f9bb11146100b9578063715018a6146100e257806379ba5097146100ec5780638c2ae331146100f45780638da5cb5b146101145780639720799214610139575b600080fd5b6100cc6100c736600461097c565b6101f2565b6040516100d991906109b9565b60405180910390f35b6100ea6102c8565b005b6100ea6102dc565b61010761010236600461097c565b61035b565b6040516100d99190610a6d565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100d9565b6100ea610147366004610aa4565b6103e7565b61015f61015a36600461097c565b610438565b60405190151581526020016100d9565b6100ea61017d36600461097c565b610466565b610107610190366004610b80565b6104cf565b6001546001600160a01b0316610121565b6101d16101b436600461097c565b805160208183018101805160028252928201919093012091525481565b6040519081526020016100d9565b6100ea6101ed366004610b99565b61057b565b60408051808201909152600081526060602082015260006002836040516102199190610bc2565b9081526040519081900360200190205490508061024957604051633b4835d960e21b815260040160405180910390fd5b604051630e9caa7160e21b81526004810182905273__$1461fc95244bd93aa05561b473f57cc149$__90633a72a9c490602401600060405180830381865af4158015610299573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102c19190810190610c85565b9392505050565b6102d061063c565b6102da6000610696565b565b60015433906001600160a01b0316811461034f5760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b60648201526084015b60405180910390fd5b61035881610696565b50565b60606000610368836101f2565b6040516306ab4ef360e41b815290915073__$1461fc95244bd93aa05561b473f57cc149$__90636ab4ef30906103a2908490600401610cf5565b600060405180830381865af41580156103bf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102c19190810190610d1a565b6000801b6002846040516103fb9190610bc2565b908152602001604051809103902054146104285760405163fc78a34d60e01b815260040160405180910390fd5b6104338383836106af565b505050565b60008060001b60028360405161044e9190610bc2565b90815260200160405180910390205414159050919050565b61046e61063c565b60028160405161047e9190610bc2565b9081526040519081900360200181206000905561049c908290610bc2565b604051908190038120907f584fb2b00bcb43e608b5efabffaa6c6037e3f5fd1a3ec96ea172ada6056d617490600090a250565b600381815481106104df57600080fd5b9060005260206000200160009150905080546104fa90610d91565b80601f016020809104026020016040519081016040528092919081815260200182805461052690610d91565b80156105735780601f1061054857610100808354040283529160200191610573565b820191906000526020600020905b81548152906001019060200180831161055657829003601f168201915b505050505081565b61058361063c565b600180546001600160a01b0383166001600160a01b031990911681179091556105b46000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146102da5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610346565b600180546001600160a01b0319169055610358816105ec565b60008073__$753a9f2206a3f3daa0935653cc04bf2189$__63e4a6591f85856040518363ffffffff1660e01b81526004016106eb929190610dcb565b600060405180830381865af4158015610708573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107309190810190610df0565b91509150816002866040516107459190610bc2565b908152604051602091819003820190209190915560038054600181018255600091909152865161079c927fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b909201918801906107f5565b5081856040516107ac9190610bc2565b604051908190038120835190917f1775727f73eb9deb31b3acc059551958c7fc9ddac6f63fec63eb7b198ccf2579916107e6918890610e37565b60405180910390a35050505050565b82805461080190610d91565b90600052602060002090601f0160209004810192826108235760008555610869565b82601f1061083c57805160ff1916838001178555610869565b82800160010185558215610869579182015b8281111561086957825182559160200191906001019061084e565b50610875929150610879565b5090565b5b80821115610875576000815560010161087a565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156108c7576108c761088e565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156108f6576108f661088e565b604052919050565b600067ffffffffffffffff8211156109185761091861088e565b50601f01601f191660200190565b600082601f83011261093757600080fd5b813561094a610945826108fe565b6108cd565b81815284602083860101111561095f57600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561098e57600080fd5b813567ffffffffffffffff8111156109a557600080fd5b6109b184828501610926565b949350505050565b60208082528251828201528281015160408084015280516060840181905260009291820190839060808601905b80831015610a0657835182529284019260019290920191908401906109e6565b509695505050505050565b60005b83811015610a2c578181015183820152602001610a14565b83811115610a3b576000848401525b50505050565b60008151808452610a59816020860160208601610a11565b601f01601f19169290920160200192915050565b6020815260006102c16020830184610a41565b600067ffffffffffffffff821115610a9a57610a9a61088e565b5060051b60200190565b600080600060608486031215610ab957600080fd5b833567ffffffffffffffff80821115610ad157600080fd5b610add87838801610926565b9450602091508186013581811115610af457600080fd5b8601601f81018813610b0557600080fd5b8035610b1361094582610a80565b81815260059190911b8201840190848101908a831115610b3257600080fd5b928501925b82841015610b5057833582529285019290850190610b37565b96505050506040860135915080821115610b6957600080fd5b50610b7686828701610926565b9150509250925092565b600060208284031215610b9257600080fd5b5035919050565b600060208284031215610bab57600080fd5b81356001600160a01b03811681146102c157600080fd5b60008251610bd4818460208701610a11565b9190910192915050565b600060408284031215610bf057600080fd5b610bf86108a4565b90508151815260208083015167ffffffffffffffff811115610c1957600080fd5b8301601f81018513610c2a57600080fd5b8051610c3861094582610a80565b81815260059190911b82018301908381019087831115610c5757600080fd5b928401925b82841015610c7557835182529284019290840190610c5c565b8085870152505050505092915050565b600060208284031215610c9757600080fd5b815167ffffffffffffffff811115610cae57600080fd5b6109b184828501610bde565b600081518084526020808501945080840160005b83811015610cea57815187529582019590820190600101610cce565b509495945050505050565b6020815281516020820152600060208301516040808401526109b16060840182610cba565b600060208284031215610d2c57600080fd5b815167ffffffffffffffff811115610d4357600080fd5b8201601f81018413610d5457600080fd5b8051610d62610945826108fe565b818152856020838501011115610d7757600080fd5b610d88826020830160208601610a11565b95945050505050565b600181811c90821680610da557607f821691505b602082108103610dc557634e487b7160e01b600052602260045260246000fd5b50919050565b604081526000610dde6040830185610cba565b8281036020840152610d888185610a41565b60008060408385031215610e0357600080fd5b82519150602083015167ffffffffffffffff811115610e2157600080fd5b610e2d85828601610bde565b9150509250929050565b8281526040602082015260006109b16040830184610a4156fea164736f6c634300080d000a";

type FileStoreConstructorParams =
  | [linkLibraryAddresses: FileStoreLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FileStoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class FileStore__factory extends ContractFactory {
  constructor(...args: FileStoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        FileStore__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(linkLibraryAddresses: FileStoreLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1461fc95244bd93aa05561b473f57cc149\\$__", "g"),
      linkLibraryAddresses[
        "packages/contracts/src/approach2/FileReader.sol:FileReader"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$753a9f2206a3f3daa0935653cc04bf2189\\$__", "g"),
      linkLibraryAddresses[
        "packages/contracts/src/approach2/FileWriter.sol:FileWriter"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FileStore> {
    return super.deploy(overrides || {}) as Promise<FileStore>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FileStore {
    return super.attach(address) as FileStore;
  }
  override connect(signer: Signer): FileStore__factory {
    return super.connect(signer) as FileStore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FileStoreInterface {
    return new utils.Interface(_abi) as FileStoreInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FileStore {
    return new Contract(address, _abi, signerOrProvider) as FileStore;
  }
}

export interface FileStoreLibraryAddresses {
  ["packages/contracts/src/approach2/FileReader.sol:FileReader"]: string;
  ["packages/contracts/src/approach2/FileWriter.sol:FileWriter"]: string;
}
