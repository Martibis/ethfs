/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { ContentStore, ContentStoreInterface } from "../ContentStore";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "checksum",
        type: "bytes32",
      },
    ],
    name: "ChecksumExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "checksum",
        type: "bytes32",
      },
    ],
    name: "ChecksumNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "ContentTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_size",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_end",
        type: "uint256",
      },
    ],
    name: "InvalidCodeAtRange",
    type: "error",
  },
  {
    inputs: [],
    name: "WriteError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "checksum",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "contentSize",
        type: "uint256",
      },
    ],
    name: "NewChecksum",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_checksums",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "_pointers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "content",
        type: "bytes",
      },
    ],
    name: "addContent",
    outputs: [
      {
        internalType: "bytes32",
        name: "checksum",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "pointer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pointer",
        type: "address",
      },
    ],
    name: "addPointer",
    outputs: [
      {
        internalType: "bytes32",
        name: "checksum",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "checksum",
        type: "bytes32",
      },
    ],
    name: "checksumExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "checksum",
        type: "bytes32",
      },
    ],
    name: "contentLength",
    outputs: [
      {
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "checksum",
        type: "bytes32",
      },
    ],
    name: "getPointer",
    outputs: [
      {
        internalType: "address",
        name: "pointer",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610779806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80633a77c6c91161005b5780633a77c6c9146101195780634641dce61461012c578063a1eb26f31461013f578063f97406f71461015257600080fd5b806308fd83ae14610082578063093e9839146100c857806331654b09146100f8575b600080fd5b6100ab6100903660046105ac565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100db6100d63660046105db565b61018d565b604080519283526001600160a01b039091166020830152016100bf565b61010b6101063660046105ac565b61029f565b6040519081526020016100bf565b61010b61012736600461068c565b610307565b6100ab61013a3660046105ac565b6103e0565b61010b61014d3660046105ac565b610434565b61017d6101603660046105ac565b6000908152602081905260409020546001600160a01b0316151590565b60405190151581526020016100bf565b600080615fff835111156101b457604051635ee68a6560e01b815260040160405180910390fd5b82516020808501919091206000818152918290526040909120549092506001600160a01b031615610200575060008181526020819052604090205490926001600160a01b039091169150565b61020983610455565b60008381526020818152604080832080546001600160a01b0319166001600160a01b03861617905560018054808201825593527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69092018590558551915191825291925083917fa1011c3aaafa54b70d8ca12f3b9257ca9a4fe1f6a02196819ea1dcaee1932ca0910160405180910390a2915091565b6000818152602081905260408120546001600160a01b03166102dc576040516303001a1960e41b8152600481018390526024015b60405180910390fd5b600082815260208190526040902054610301906001906001600160a01b03163b6106b5565b92915050565b6000610312826104ba565b80516020918201206000818152918290526040909120549091506001600160a01b03161561033f57919050565b600081815260208190526040812080546001600160a01b0319166001600160a01b038516179055600180548082018255918190527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf690910182905581907fa1011c3aaafa54b70d8ca12f3b9257ca9a4fe1f6a02196819ea1dcaee1932ca090843b6103ca91906106b5565b60405190815260200160405180910390a2919050565b6000818152602081905260408120546001600160a01b0316610418576040516303001a1960e41b8152600481018390526024016102d3565b506000908152602081905260409020546001600160a01b031690565b6001818154811061044457600080fd5b600091825260209091200154905081565b6000806104808360405160200161046c9190610715565b6040516020818303038152906040526104ca565b90508051602082016000f091506001600160a01b0382166104b45760405163046a55db60e11b815260040160405180910390fd5b50919050565b60606103018260016000196104f6565b60608151826040516020016104e0929190610728565b6040516020818303038152906040529050919050565b6060833b60008190036105195750506040805160208101909152600081526105a5565b808411156105375750506040805160208101909152600081526105a5565b838310156105695760405163162544fd60e11b81526004810182905260248101859052604481018490526064016102d3565b838303848203600082821061057e5782610580565b815b60408051603f8301601f19168101909152818152955090508087602087018a3c505050505b9392505050565b6000602082840312156105be57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156105ed57600080fd5b813567ffffffffffffffff8082111561060557600080fd5b818401915084601f83011261061957600080fd5b81358181111561062b5761062b6105c5565b604051601f8201601f19908116603f01168101908382118183101715610653576106536105c5565b8160405282815287602084870101111561066c57600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561069e57600080fd5b81356001600160a01b03811681146105a557600080fd5b6000828210156106d557634e487b7160e01b600052601160045260246000fd5b500390565b6000815160005b818110156106fb57602081850181015186830152016106e1565b8181111561070a576000828601525b509290920192915050565b6000815260006105a560018301846106da565b606360f81b815260e083901b6001600160e01b03191660018201526880600e6000396000f360b81b60058201526000610764600e8301846106da565b94935050505056fea164736f6c634300080d000a";

type ContentStoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContentStoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContentStore__factory extends ContractFactory {
  constructor(...args: ContentStoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContentStore> {
    return super.deploy(overrides || {}) as Promise<ContentStore>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ContentStore {
    return super.attach(address) as ContentStore;
  }
  override connect(signer: Signer): ContentStore__factory {
    return super.connect(signer) as ContentStore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContentStoreInterface {
    return new utils.Interface(_abi) as ContentStoreInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContentStore {
    return new Contract(address, _abi, signerOrProvider) as ContentStore;
  }
}
