"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileStore__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "checksum",
                type: "bytes32",
            },
        ],
        name: "ChunkExists",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "checksum",
                type: "bytes32",
            },
        ],
        name: "ChunkNotFound",
        type: "error",
    },
    {
        inputs: [],
        name: "ChunkTooBig",
        type: "error",
    },
    {
        inputs: [],
        name: "EmptyFile",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_size",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_start",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_end",
                type: "uint256",
            },
        ],
        name: "InvalidCodeAtRange",
        type: "error",
    },
    {
        inputs: [],
        name: "WriteError",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "checksum",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "size",
                type: "uint256",
            },
        ],
        name: "NewChunk",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "checksum",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "size",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "string",
                name: "contentType",
                type: "string",
            },
            {
                indexed: false,
                internalType: "string",
                name: "contentEncoding",
                type: "string",
            },
        ],
        name: "NewFile",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "_checksums",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        name: "_chunks",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "checksum",
                type: "bytes32",
            },
        ],
        name: "checksumExists",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "checksums",
                type: "bytes32[]",
            },
        ],
        name: "checksumsToPointers",
        outputs: [
            {
                internalType: "address[]",
                name: "pointers",
                type: "address[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "checksum",
                type: "bytes32",
            },
        ],
        name: "chunkSize",
        outputs: [
            {
                internalType: "uint256",
                name: "size",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "size",
                type: "uint256",
            },
            {
                internalType: "bytes32[]",
                name: "checksums",
                type: "bytes32[]",
            },
        ],
        name: "readBytes",
        outputs: [
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "checksum",
                type: "bytes32",
            },
        ],
        name: "readChunk",
        outputs: [
            {
                internalType: "bytes",
                name: "chunk",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "checksums",
                type: "bytes32[]",
            },
        ],
        name: "readChunks",
        outputs: [
            {
                internalType: "bytes[]",
                name: "chunks",
                type: "bytes[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "checksum",
                type: "bytes32",
            },
        ],
        name: "readFile",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "size",
                        type: "uint256",
                    },
                    {
                        internalType: "string",
                        name: "contentType",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "contentEncoding",
                        type: "string",
                    },
                    {
                        internalType: "bytes32[]",
                        name: "checksums",
                        type: "bytes32[]",
                    },
                ],
                internalType: "struct File",
                name: "file",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "size",
                        type: "uint256",
                    },
                    {
                        internalType: "string",
                        name: "contentType",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "contentEncoding",
                        type: "string",
                    },
                    {
                        internalType: "bytes32[]",
                        name: "checksums",
                        type: "bytes32[]",
                    },
                ],
                internalType: "struct File",
                name: "file",
                type: "tuple",
            },
        ],
        name: "readFileData",
        outputs: [
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "checksum",
                type: "bytes32",
            },
        ],
        name: "readFileData",
        outputs: [
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "chunk",
                type: "bytes",
            },
        ],
        name: "writeChunk",
        outputs: [
            {
                internalType: "bytes32",
                name: "checksum",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes[]",
                name: "chunks",
                type: "bytes[]",
            },
        ],
        name: "writeChunks",
        outputs: [
            {
                internalType: "bytes32[]",
                name: "fileChecksums",
                type: "bytes32[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "contentType",
                type: "string",
            },
            {
                internalType: "string",
                name: "contentEncoding",
                type: "string",
            },
            {
                internalType: "bytes32[]",
                name: "checksums",
                type: "bytes32[]",
            },
        ],
        name: "writeFile",
        outputs: [
            {
                internalType: "bytes32",
                name: "checksum",
                type: "bytes32",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "size",
                        type: "uint256",
                    },
                    {
                        internalType: "string",
                        name: "contentType",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "contentEncoding",
                        type: "string",
                    },
                    {
                        internalType: "bytes32[]",
                        name: "checksums",
                        type: "bytes32[]",
                    },
                ],
                internalType: "struct File",
                name: "file",
                type: "tuple",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "contentType",
                type: "string",
            },
            {
                internalType: "string",
                name: "contentEncoding",
                type: "string",
            },
            {
                internalType: "bytes[]",
                name: "chunks",
                type: "bytes[]",
            },
        ],
        name: "writeFile",
        outputs: [
            {
                internalType: "bytes32",
                name: "checksum",
                type: "bytes32",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "size",
                        type: "uint256",
                    },
                    {
                        internalType: "string",
                        name: "contentType",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "contentEncoding",
                        type: "string",
                    },
                    {
                        internalType: "bytes32[]",
                        name: "checksums",
                        type: "bytes32[]",
                    },
                ],
                internalType: "struct File",
                name: "file",
                type: "tuple",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "";
const isSuperArgs = (xs) => xs.length > 1;
class FileStore__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.FileStore__factory = FileStore__factory;
FileStore__factory.bytecode = _bytecode;
FileStore__factory.abi = _abi;
