/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { FileReader, FileReaderInterface } from "../FileReader";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "checksum",
        type: "bytes32",
      },
    ],
    name: "FileNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_size",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_end",
        type: "uint256",
      },
    ],
    name: "InvalidCodeAtRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "checksum",
        type: "bytes32",
      },
    ],
    name: "readFile",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "size",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "checksums",
            type: "bytes32[]",
          },
        ],
        internalType: "struct File",
        name: "file",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "checksum",
        type: "bytes32",
      },
    ],
    name: "readFileData",
    outputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "size",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "checksums",
            type: "bytes32[]",
          },
        ],
        internalType: "struct File",
        name: "file",
        type: "tuple",
      },
    ],
    name: "readFileData",
    outputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61087761003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80633a72a9c4146100505780634cfbb2de146100795780636ab4ef3014610099575b600080fd5b61006361005e3660046104ec565b6100ac565b6040516100709190610505565b60405180910390f35b61008c6100873660046104ec565b6101f2565b604051610070919061055d565b61008c6100a7366004610646565b610206565b604080518082019091526000815260606020820152600073__$79896583f45f015cbf360bbefcc2e48d69$__63c2722ecc6040518163ffffffff1660e01b8152600401602060405180830381865af415801561010c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101309190610732565b6001600160a01b0316634641dce6846040518263ffffffff1660e01b815260040161015d91815260200190565b602060405180830381865afa15801561017a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019e9190610732565b90506001600160a01b0381166101cf5760405163a4b13c7360e01b8152600481018490526024015b60405180910390fd5b6101d881610360565b8060200190518101906101eb919061074f565b9392505050565b606060006101ff836100ac565b90506101eb815b606061022d8260000151604080518281016060018252910181526000602090910190815290565b905060005b82602001515181101561035a576103488261034373__$79896583f45f015cbf360bbefcc2e48d69$__63c2722ecc6040518163ffffffff1660e01b8152600401602060405180830381865af415801561028f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b39190610732565b6001600160a01b0316634641dce6876020015186815181106102d7576102d761080d565b60200260200101516040518263ffffffff1660e01b81526004016102fd91815260200190565b602060405180830381865afa15801561031a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033e9190610732565b610360565b610376565b8061035281610839565b915050610232565b50919050565b6060610370826001600019610401565b92915050565b601f1982015182518251603f199092019182906103939083610852565b11156103f15760405162461bcd60e51b815260206004820152602760248201527f44796e616d69634275666665723a20417070656e64696e67206f7574206f66206044820152663137bab732399760c91b60648201526084016101c6565b6103fb84846104b6565b50505050565b6060833b60008190036104245750506040805160208101909152600081526101eb565b808411156104425750506040805160208101909152600081526101eb565b838310156104745760405163162544fd60e11b81526004810182905260248101859052604481018490526064016101c6565b8383038482036000828210610489578261048b565b815b60408051603f8301601f19168101909152818152955090508087602087018a3c505050509392505050565b8051602082019150808201602084510184015b818410156104e15783518152602093840193016104c9565b505082510190915250565b6000602082840312156104fe57600080fd5b5035919050565b60208082528251828201528281015160408084015280516060840181905260009291820190839060808601905b808310156105525783518252928401926001929092019190840190610532565b509695505050505050565b600060208083528351808285015260005b8181101561058a5785810183015185820160400152820161056e565b8181111561059c576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156105eb576105eb6105b2565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561061a5761061a6105b2565b604052919050565b600067ffffffffffffffff82111561063c5761063c6105b2565b5060051b60200190565b6000602080838503121561065957600080fd5b823567ffffffffffffffff8082111561067157600080fd5b908401906040828703121561068557600080fd5b61068d6105c8565b8235815283830135828111156106a257600080fd5b80840193505086601f8401126106b757600080fd5b823591506106cc6106c783610622565b6105f1565b82815260059290921b830184019184810190888411156106eb57600080fd5b938501935b83851015610709578435825293850193908501906106f0565b948201949094529695505050505050565b6001600160a01b038116811461072f57600080fd5b50565b60006020828403121561074457600080fd5b81516101eb8161071a565b6000602080838503121561076257600080fd5b825167ffffffffffffffff8082111561077a57600080fd5b908401906040828703121561078e57600080fd5b6107966105c8565b8251815283830151828111156107ab57600080fd5b80840193505086601f8401126107c057600080fd5b825191506107d06106c783610622565b82815260059290921b830184019184810190888411156107ef57600080fd5b938501935b83851015610709578451825293850193908501906107f4565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161084b5761084b610823565b5060010190565b6000821982111561086557610865610823565b50019056fea164736f6c634300080d000a";

type FileReaderConstructorParams =
  | [linkLibraryAddresses: FileReaderLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FileReaderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class FileReader__factory extends ContractFactory {
  constructor(...args: FileReaderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        FileReader__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: FileReaderLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$79896583f45f015cbf360bbefcc2e48d69\\$__", "g"),
      linkLibraryAddresses[
        "packages/contracts/src/approach2/ContentStoreRegistry.sol:ContentStoreRegistry"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FileReader> {
    return super.deploy(overrides || {}) as Promise<FileReader>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FileReader {
    return super.attach(address) as FileReader;
  }
  override connect(signer: Signer): FileReader__factory {
    return super.connect(signer) as FileReader__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FileReaderInterface {
    return new utils.Interface(_abi) as FileReaderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FileReader {
    return new Contract(address, _abi, signerOrProvider) as FileReader;
  }
}

export interface FileReaderLibraryAddresses {
  ["packages/contracts/src/approach2/ContentStoreRegistry.sol:ContentStoreRegistry"]: string;
}
